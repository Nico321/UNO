package de.uno.android;

import de.uno.android.usermanagement.User;
import android.app.Activity;
import android.app.ProgressDialog;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.Toast;
import android.widget.ToggleButton;

public class NewServer extends Activity implements OnClickListener{

	private static final String TAG = NewServer.class.getName();
	private static final String NAMESPACE = "http://gameconnection.uno.de/";
	private static final String URL = "http://192.168.2.104:8080/UnoGame/GameConnectionManager";
	private static final String METHOD_NAME = "createNewGame";
	private ProgressDialog progDailog;
	private Button startbtn;
	private ToggleButton togglebtn;
	private Toast toast = null;
	private User activeUser = null;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.newserver_view);
		toast = Toast.makeText(getApplicationContext(), "", Toast.LENGTH_LONG);
		activeUser = ((AppVariables) this.getApplication()).getUser();
		
		startbtn = (Button) findViewById(R.id.newServerStartGamebtn);
		startbtn.setOnClickListener(this);
		togglebtn = (ToggleButton) findViewById(R.id.newServerRdybtn);
		togglebtn.setOnClickListener(this);
	
		
		
	}

	@Override
	public void onClick(View v) {
		if(v.getId() == R.id.newServerStartGamebtn){
			
			progDailog = new ProgressDialog(NewServer.this);
	        progDailog.setMessage("Serversuche...Bitte warten");
	        progDailog.setIndeterminate(false);
	        progDailog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
	        progDailog.setCancelable(true);
	        progDailog.show();
			
			AsynchronTask runner = new AsynchronTask();
			runner.setKsoapAttributes(NAMESPACE, URL, METHOD_NAME);
			runner.execute(this, activeUser.getUsername());
			
			
			
		}
		if(v.getId() == R.id.newServerRdybtn){
			ToggleButton tb = (ToggleButton) findViewById (R.id.newServerRdybtn);
			if(tb.isChecked()){
				toast.setText("Bereit!");
				toast.show();
				
			}
			else{
				toast.setText("Nicht Bereit!");
				toast.show();
				
			}
		}
		
	}

	public void createNewGameCompleted(Boolean success){
		Log.d(TAG, "NewServer RÃ¼ckruf - Angekommen");
		if (success){
			Log.d(TAG, "NewServer success");
			progDailog.cancel();
			toast.setText("Spiel erstellt!");
			toast.show();
		}
		else{
			Log.d(TAG, "NewServer falied");
			progDailog.cancel();
		}
	}
	
}
