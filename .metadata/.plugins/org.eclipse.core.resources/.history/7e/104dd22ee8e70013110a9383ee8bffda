package com.android.uno;

import java.util.List;

import org.ksoap2.HeaderProperty;
import org.ksoap2.SoapEnvelope;
import org.ksoap2.SoapFault;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;

import android.os.AsyncTask;

public class AsynchronTask extends AsyncTask<Object, Object, Object> {

	private String NAMESPACE;
	private String URL;	 
	private String METHOD_NAME;

	
	@Override
	protected String doInBackground(Object... params) {
		String result = null;
	try{
		System.out.println("Error0");
			executeSoapAction(params[0], params[1], params[2]);		
		return result;
	}
	catch(Exception e) {
	    e.printStackTrace();
	    return result = e.getMessage();
	   }
	
	}
	public boolean setKsoapAttributes(String NAMESPACE,String URL, String METHOD_NAME){
		this.NAMESPACE = NAMESPACE;
		this.URL = URL;
		this.METHOD_NAME = METHOD_NAME;
		
		return true;
	}
	private void executeSoapAction(Object... params) {
		//SoapObject result = null;
	    SoapObject request = new SoapObject(NAMESPACE, METHOD_NAME);
	    
	    //for (int i=0; i<params.length; i++) {
		//    request.addProperty("arg" + i, params[i]);
	    //}
	    
	    System.out.println("Error1");

	    SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
	    System.out.println("Error2");
	    envelope.setOutputSoapObject(request);
	    System.out.println("Error3");
	    HttpTransportSE androidHttpTransport = new HttpTransportSE(URL);
	    System.out.println("Error4");
	    try {	        
		    List<HeaderProperty> reqHeaders = null;
		    @SuppressWarnings({"unused", "unchecked"})			
	    	List<HeaderProperty> respHeaders = androidHttpTransport.call("", envelope, reqHeaders);
	        System.out.println("error5");
		    //result = (SoapObject) envelope.getResponse();  
	    }
	    catch (SoapFault e) {
	    	e.printStackTrace();
	    }
	    catch (Exception e) {
	    	e.printStackTrace();
	    }	    
	    //String s = getResult(result);
	    //System.out.println(s);
	    Register r = (Register) params[0];
    	r.registartionCompleted();
	    if(params[0] instanceof Register){
	    	Register r2 = (Register) params[0];
	    	r2.registartionCompleted();
	    }
	   
	}
	
	public String getResult(SoapObject r){
		int count = r.getPropertyCount();
		String p1 = r.getPropertyAsString(0);
		String p2 = r.getPropertyAsString(1);
		String a1 = r.getAttributeAsString(0);
		String a2 = r.getAttributeAsString(1);
		System.out.println(count + p1 + p2 + a1 + a2);
		return count+p1+p2+a1+a2;
	}
	

}